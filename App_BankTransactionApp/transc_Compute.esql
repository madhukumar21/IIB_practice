

CREATE COMPUTE MODULE transc_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		 CALL CopyEntireMessage();
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		DECLARE type CHARACTER InputRoot.JSON.Data.acc.trascation;
		DECLARE acc_no INTEGER InputRoot.JSON.Data.acc.accno;
		DECLARE val INTEGER InputRoot.JSON.Data.acc.value;
	IF  type = 'Debit' THEN
		
		DECLARE sqlst CHARACTER 'update ACCOUNT_1179 set BALANCE = BALANCE - ? where ACCOUNT_NO= 8309515315';
		set Environment.Var1=PASSTHRU(sqlst,val); 
	ELSEIF type = 'Credit'  THEN
		DECLARE sqlst CHARACTER 'update ACCOUNT_1179 set BALANCE = BALANCE + ? where ACCOUNT_NO= 8309515315';	
		set Environment.Var1=PASSTHRU(sqlst,val); 
	ELSE
		
		set OutputRoot.JSON.Data.Message='Provide Valid Transcation Type';
	END IF;
	
	SET OutputRoot=InputRoot;
	END;
END MODULE;
